{"version":3,"sources":["../../src/operators/setStorage.js"],"names":["setStorageFactory","key","value","setStorage","storage","resolve","path","maybePromise","set","Promise","then","success","error"],"mappings":";;;;;;;AAAA,SAASA,iBAAT,CAA2BC,GAA3B,EAAgCC,KAAhC,EAAuC;AACrC,WAASC,UAAT,OAAgD;AAAA,QAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,QAAjBC,OAAiB,QAAjBA,OAAiB;AAAA,QAARC,IAAQ,QAARA,IAAQ;AAC9C,QAAIC,YAAY,GAAGH,OAAO,CAACI,GAAR,CAAYH,OAAO,CAACH,KAAR,CAAcD,GAAd,CAAZ,EAAgCI,OAAO,CAACH,KAAR,CAAcA,KAAd,CAAhC,CAAnB;;AAEA,QAAIK,YAAY,YAAYE,OAAxB,IAAmCH,IAAvC,EAA6C;AAC3C,aAAOC,YAAY,CAChBG,IADI,CACC;AAAA,eAAMJ,IAAI,CAACK,OAAL,EAAN;AAAA,OADD,WAEE,UAACC,KAAD;AAAA,eAAWN,IAAI,CAACM,KAAL,CAAW;AAAEA,UAAAA,KAAK,EAALA;AAAF,SAAX,CAAX;AAAA,OAFF,CAAP;AAGD,KAJD,MAIO,IAAIL,YAAY,YAAYE,OAA5B,EAAqC;AAC1C,aAAOF,YAAP;AACD;AACF;;AAED,SAAOJ,UAAP;AACD;;eAEcH,iB","sourcesContent":["function setStorageFactory(key, value) {\n  function setStorage({ storage, resolve, path }) {\n    let maybePromise = storage.set(resolve.value(key), resolve.value(value))\n\n    if (maybePromise instanceof Promise && path) {\n      return maybePromise\n        .then(() => path.success())\n        .catch((error) => path.error({ error }))\n    } else if (maybePromise instanceof Promise) {\n      return maybePromise\n    }\n  }\n\n  return setStorage\n}\n\nexport default setStorageFactory\n"],"file":"setStorage.js"}