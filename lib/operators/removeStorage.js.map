{"version":3,"sources":["../../src/operators/removeStorage.js"],"names":["removeStorageFactory","key","removeStorage","storage","resolve","path","maybePromise","remove","value","Promise","then","success","error"],"mappings":";;;;;;;AAAA,SAASA,oBAAT,CAA8BC,GAA9B,EAAmC;AACjC,WAASC,aAAT,OAAmD;AAAA,QAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,QAAjBC,OAAiB,QAAjBA,OAAiB;AAAA,QAARC,IAAQ,QAARA,IAAQ;AACjD,QAAMC,YAAY,GAAGH,OAAO,CAACI,MAAR,CAAeH,OAAO,CAACI,KAAR,CAAcP,GAAd,CAAf,CAArB;;AAEA,QAAIK,YAAY,YAAYG,OAAxB,IAAmCJ,IAAvC,EAA6C;AAC3C,aAAOC,YAAY,CAChBI,IADI,CACC;AAAA,eAAML,IAAI,CAACM,OAAL,EAAN;AAAA,OADD,WAEE,UAACC,KAAD;AAAA,eAAWP,IAAI,CAACO,KAAL,CAAW;AAAEA,UAAAA,KAAK,EAALA;AAAF,SAAX,CAAX;AAAA,OAFF,CAAP;AAGD,KAJD,MAIO,IAAIN,YAAY,YAAYG,OAA5B,EAAqC;AAC1C,aAAOH,YAAP;AACD;AACF;;AAED,SAAOJ,aAAP;AACD;;eAEcF,oB","sourcesContent":["function removeStorageFactory(key) {\n  function removeStorage({ storage, resolve, path }) {\n    const maybePromise = storage.remove(resolve.value(key))\n\n    if (maybePromise instanceof Promise && path) {\n      return maybePromise\n        .then(() => path.success())\n        .catch((error) => path.error({ error }))\n    } else if (maybePromise instanceof Promise) {\n      return maybePromise\n    }\n  }\n\n  return removeStorage\n}\n\nexport default removeStorageFactory\n"],"file":"removeStorage.js"}